{"hash":"782414107f461c86c0093807ec9a7009f522142f","data":{"article":{"id":"606735ebe5e34f268e8e8047196ef22d","title":"Preloading Multiple Audio Tags in Internet Explorer 9","date":"November 02, 2012","categories":["Development"],"permalink":"preloading-multiple-audio-tags-in-internet-explorer-9","content":"<p>I had a unique problem.  I have an app I'm working on where I needed to preload about 50 audio files for use during the page's lifetime.  If you're up on your HTML5-fu, this is a simple task:</p>\n<pre>\n&lt;audio id=\"myAudio\" controls preload=\"auto\"&gt;\n     &lt;source src=\"/my-podcast.mp3\" /&gt;\n     &lt;source src=\"/my-podcast.ogg\" /&gt;\n&lt;/audio&gt;\n</pre>\n<p>In Chrome, this works PERFECTLY (as it should).</p>\n<p>In Internet Explorer, several (if not all) files will fail to preload.  Here's how to figure it:</p>\n<pre lang=\"javascript\">\nvar audioElement = document.getElementById(\"myAudio\");\nconsole.log(audioElement.networkState);\n</pre>\n<p>Network state can have 3 options: <strong>NETWORK_EMPTY, NETWORK_IDLE, NETWORK_LOADING, NETWORK_NO_SOURCE.</strong></p>\n<p>You \"want\" it to be IDLE, because that means the file is loaded.  Typically, you'll get NO_SOURCE with Internet Explorer.</p>\n<p>What's a quick fix?  First, make sure there is no preload attribute, and then do this:</p>\n<pre lang=\"javascript\">\nvar audioElement = document.getElementById(\"myAudio\");\naudioElement.load(); // kicks off the load\n</pre>\n<p>This has worked for me in 100% of the tests I've done tonight.  Feel free to comment on other solutions.  I haven't tested in IE10 yet, so I cannot be certain of how it works.</p>\n"}},"context":{}}